stages:
    - style
    - quality
    - test
    - package
    - deployment

cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

variables:
    DOCKER_DRIVER: overlay2
    COMPOSER_COMMAND: "/var/www/html/composer install --prefer-dist --no-ansi --no-interaction --no-progress --optimize-autoloader"
    COMPOSER_HOME: '/var/www/html/.composer'

include:
    - '/.gitlab/shopware-6-4.yml'

before_script:
    - curl https://getcomposer.org/download/2.4.4/composer.phar -o /var/www/html/composer
    - chmod +x /var/www/html/composer
    - ${COMPOSER_COMMAND}
    - cp -r ${CI_PROJECT_DIR} /var/www/html/custom/plugins/${CI_PROJECT_NAME}

k10r-phpstan-65:
    stage: quality
    image: "dockware/dev:${SW_VERSION}"
    parallel:
        matrix:
            -   PHP_VERSION: [ "8.1" ]
                SW_VERSION: [ "6.5.0.0", "6.5.2.1" ]
    needs: [ ]
    except:
        variables: [ $DISABLE_PHPSTAN_K10R == "1" ]
    script:
        - cd /var/www/html
        - /var/www/html/composer config --no-plugins allow-plugins.bamarni/composer-bin-plugin true
        - /var/www/html/composer require --dev --no-interaction code-quality bamarni/composer-bin-plugin
        - "jq '.extra += {\"bamarni-bin\": {\"bin-links\": false, \"forward-command\": true}}' composer.json > composer.tmp && mv composer.tmp composer.json"
        - /var/www/html/composer install --no-interaction
        - vendor-bin/phpstan/vendor/bin/phpstan analyse -c custom/plugins/${CI_PROJECT_NAME}/phpstan_shopware-6-5.neon -a custom/plugins/${CI_PROJECT_NAME}/vendor/autoload.php custom/plugins/${CI_PROJECT_NAME}/src custom/plugins/${CI_PROJECT_NAME}/tests
    cache:
        key: global
        paths:
            - vendor

sw-phpstan-65:
    stage: quality
    image: "dockware/dev:${SW_VERSION}"
    parallel:
        matrix:
            -   PHP_VERSION: [ "8.1" ]
                SW_VERSION: [ "6.5.0.0", "6.5.2.1" ]
    needs: [ ]
    except:
        variables: [ $DISABLE_PHPSTAN_SW == "1" ]
    script:
        - cd /var/www/html
        - /var/www/html/composer config --no-plugins allow-plugins.bamarni/composer-bin-plugin true
        - /var/www/html/composer require --dev --no-interaction code-quality bamarni/composer-bin-plugin
        - "jq '.extra += {\"bamarni-bin\": {\"bin-links\": false, \"forward-command\": true}}' composer.json > composer.tmp && mv composer.tmp composer.json"
        - /var/www/html/composer install --no-interaction
        - vendor-bin/phpstan/vendor/bin/phpstan analyse -c custom/plugins/${CI_PROJECT_NAME}/shopware_store_phpstan.neon -a custom/plugins/${CI_PROJECT_NAME}/vendor/autoload.php custom/plugins/${CI_PROJECT_NAME}/src custom/plugins/${CI_PROJECT_NAME}/tests
    cache:
        key: global
        paths:
            - vendor

install-65:
    stage: test
    image: "dockware/dev:${SW_VERSION}"
    parallel:
        matrix:
            -   PHP_VERSION: [ "8.1" ]
                SW_VERSION: [ "6.5.0.0", "6.5.2.1" ]
    needs: [ ]
    except:
        variables: [ $DISABLE_PHPUNIT == "1" ]
    script:
        - sudo rm -rf /var/run/mysqld/mysqld.sock.lock
        - sudo chown -R mysql:mysql /var/lib/mysql /var/run/mysqld
        - sudo service mysql start
        - cd /var/www/html/ && php bin/console plugin:refresh -nq && php bin/console plugin:install --activate -c ${CI_PROJECT_NAME} -nq
        - cd /var/www/html/ && /var/www/html/composer dump-autoload -d custom/plugins/${CI_PROJECT_NAME}
        - cd /var/www/html/ && php bin/console plugin:list
    cache:
        key: global
        paths:
            - vendor

build-65:
    stage: package
    image:
        name: ghcr.io/friendsofshopware/platform-plugin-dev:v6.5.0
        entrypoint: [""]
    before_script:
        - echo ""
    only:
        - tags
        - master
        - /^integration.*$/
        - /^fix.*$/
        - feature/HEIDELPAYSUPPORT-302
    except:
        variables: [ $DISABLE_PACKAGE == "1" ]
    script:
        - start-mysql
        - ln -s "$(pwd)" "/plugins/${CI_PROJECT_NAME}"
        - jq '.version = .version + "65"' /plugins/${CI_PROJECT_NAME}/composer.json > /plugins/${CI_PROJECT_NAME}/composer.tmp && mv /plugins/${CI_PROJECT_NAME}/composer.tmp /plugins/${CI_PROJECT_NAME}/composer.json
        - sed '1 s_$_65_' /plugins/${CI_PROJECT_NAME}/CHANGELOG_en-GB.md > /plugins/${CI_PROJECT_NAME}/CHANGELOG_en-GB.tmp && mv /plugins/${CI_PROJECT_NAME}/CHANGELOG_en-GB.tmp /plugins/${CI_PROJECT_NAME}/CHANGELOG_en-GB.md
        - sed '1 s_$_65_' /plugins/${CI_PROJECT_NAME}/CHANGELOG_de-DE.md > /plugins/${CI_PROJECT_NAME}/CHANGELOG_de-DE.tmp && mv /plugins/${CI_PROJECT_NAME}/CHANGELOG_de-DE.tmp /plugins/${CI_PROJECT_NAME}/CHANGELOG_de-DE.md
        - plugin-uploader ext:prepare "/plugins/${CI_PROJECT_NAME}"
        - rm -rf $( cat .sw-zip-blocklist ) && rm -rf .sw-zip-blocklist
        - pack-plugin ${CI_PROJECT_NAME}
        - plugin-uploader ext:validate "$(realpath "$(find . -type f -name "*.zip" -print0 -maxdepth 1)")"
    artifacts:
        paths:
            - "*.zip"
        expire_in: 1 week
